{"version":3,"sources":["components/GetFace.js","components/Joke.js","components/PopUp.js","components/About.js","components/JokeList.js","components/scrap/Back.js","components/Note.js","components/List.js","components/Favs.js","App.js","registerServiceWorker.js","index.js"],"names":["GetFace","props","author","this","getFace","className","href","src","alt","Component","Joke","handleClick","bind","addThis","id","source","text","includes","target","getSource","onClick","PopUp","timer","setTimeout","togglePop","clearTimeout","message","dupe","About","loading","style","fontSize","about","JokeList","toggleAbout","state","quotes","JSON","parse","window","localStorage","getItem","selected","seenQuotes","Set","map","q","length","setState","fetchQuotes","a","numJokesToGet","axios","get","res","rez","data","has","console","log","push","body","quotesource","st","setItem","stringify","alert","delta","j","votes","then","dbIndexes","i","content","selectedQuote","filter","qid","post","comments","uuidv4","to","color","marginTop","modal","email","idx","defaultProps","Back","link","title","useState","setTitle","setComments","comment","setComment","error","setError","useEffect","catch","err","date","uTime","local","Date","toString","split","splice","indexOf","join","c","index","e","cid","patch","deleteComment","_id","time","onSubmit","preventDefault","type","value","onChange","cols","List","fontFamily","letterSpacing","nums_of_comms","Favs","favs","deleteEntry","getSavedQuotes","entryId","put","delete","update","updateEntry","App","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"qaAsCeA,E,kDAnCX,WAAYC,GAAQ,uCACVA,G,0CAGV,WACI,IAAMC,EAASC,KAAKF,MAAMC,OAC1B,SAASE,EAAQF,GACb,OAAQA,GACJ,IAAK,kBACD,MAAO,CAAC,gDAAiD,6IAG7D,IAAK,SACD,MAAO,CAAC,mDAAoD,yMAGhE,IAAK,YACD,MAAO,CAAC,0CAA2C,6EAK/D,OACI,qBAAKG,UAAU,OAAf,SACI,mBAAGC,KAAMF,EAAQF,GAAQ,GAAzB,SACI,qBAAKK,IAAKH,EAAQF,GAAQ,GAAIM,IAAKN,Y,GA1BjCO,aCEDC,E,kDACjB,WAAYT,GAAQ,IAAD,8BACf,cAAMA,IACDU,YAAc,EAAKA,YAAYC,KAAjB,gBAFJ,E,+CAKnB,WACIT,KAAKF,MAAMY,QAAQV,KAAKF,MAAMa,M,oBAIlC,WAAU,IAAD,OACCC,EAASZ,KAAKF,MAAMc,OAI1B,OAEI,sBAAKV,UAAU,OAAf,UACI,cAAC,EAAD,CAASU,OAAQZ,KAAKF,MAAMc,OAAQb,OAAQC,KAAKF,MAAMC,SAMvD,sBAAKG,UAAU,YAAf,UACI,sBAAQF,KAAKF,MAAMe,KACnB,uBACA,iCAAOb,KAAKF,MAAMC,OAAlB,IAA0B,uBAA1B,IAfM,SAAAa,GAAM,OACpBA,EAAOE,SAAS,eAAiB,mBAAGX,KAAK,uDAAuDY,OAAO,SAAtE,wBAAgG,EAAKjB,MAAMc,OAc/FI,CAAUJ,MAC/C,wBAAQV,UAAU,iBAAiBe,QAASjB,KAAKQ,YAAjD,yB,GA7BcF,aCDbY,G,wDACjB,WAAYpB,GAAQ,uCACVA,G,qDAGV,WAAqB,IAAD,OACVqB,EAAQC,YAAW,WACrB,EAAKtB,MAAMuB,cACZ,KACH,OAAO,kBAAMC,aAAaH,M,oBAG9B,WACI,OACI,qBAAKjB,UAAU,gBAAf,SACKF,KAAKF,MAAMyB,QAERvB,KAAKF,MAAMyB,QAEXvB,KAAKF,MAAM0B,KAAO,kBAAoB,yB,GAnBvBlB,cCEdmB,G,kKAEjB,WACI,OACI,qBAAKvB,UAAU,QAAf,SACI,8BACKF,KAAKF,MAAM4B,QACR,gCACI,sDACA,mBAAGxB,UAAU,0BAA0ByB,MAAO,CAAEC,SAAU,aAG9D,sBAAKX,QAASjB,KAAKF,MAAM+B,MAAzB,UACI,uBAEA,yDACA,mBAAG1B,KAAK,6BAAR,mBACA,kC,GAjBOG,cCIdwB,E,kDAIjB,WAAYhC,GAAQ,IAAD,8BACf,cAAMA,IACDU,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKsB,YAAc,EAAKA,YAAYtB,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKuB,MAAQ,CACTC,OAAQC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,WAAa,MAC5DC,SAAU,GAAIb,SAAS,EAAOF,MAAM,EAAOK,OAAO,GAEtD,EAAKW,WAAa,IAAIC,IAAI,EAAKT,MAAMC,OAAOS,KAAI,SAAAC,GAAC,OAAIA,EAAEhC,OATxC,E,qDAYnB,WACqC,IAA7BX,KAAKgC,MAAMC,OAAOW,SAClB5C,KAAK6C,SAAS,CAAEnB,SAAS,IACrB1B,KAAK8C,iB,gEAIjB,uCAAAC,EAAA,+DAEYd,EAAS,GAFrB,YAGeA,EAAOW,OAAS5C,KAAKF,MAAMkD,eAH1C,iCAI4BC,IAAMC,IAAI,6CAJtC,OAIgBC,EAJhB,OAKgBC,EAAMD,EAAIE,KAAK,GACdrD,KAAKwC,WAAWc,IAAIF,EAAIzC,IAIzB4C,QAAQC,IAAI,mDAERL,EAAIxC,IAJRsB,EAAOwB,KAAK,CAAE5C,KAAMuC,EAAIM,KAAM3D,OAAQqD,EAAIrD,OAAQa,OAAQwC,EAAIO,YAAahD,GAAIyC,EAAIzC,KARnG,uBAiBQX,KAAK6C,UACD,SAAAe,GAAE,MAAK,CACHlC,SAAS,EACTO,OAAO,GAAD,mBAAM2B,EAAG3B,QAAWA,OAE9B,kBAAMG,OAAOC,aAAawB,QAAQ,SAAU3B,KAAK4B,UAAU,EAAK9B,MAAMC,YAtBlF,kDAyBQ8B,MAAM,EAAD,IAzBb,0D,8EA6BA,SAAWpD,EAAIqD,GAAQ,IAAD,OAClBhE,KAAK6C,UACD,SAAAe,GAAE,MAAK,CACH3B,OAAQ2B,EAAG3B,OAAOS,KAAI,SAAAuB,GAAC,OACnBA,EAAEtD,KAAOA,EAAT,2BAAmBsD,GAAnB,IAAsBC,MAAOD,EAAEC,MAAQF,IAAUC,SAErD,kBAAM7B,OAAOC,aAAawB,QAAQ,SAAU3B,KAAK4B,UAAU,EAAK9B,MAAMC,c,yBAKlF,WACIjC,KAAK6C,SAAS,CAAEnB,SAAS,IACzB1B,KAAK6C,SAAS,CAAEhB,OAAO,IACvB7B,KAAK8C,gB,yBAGT,WACI9C,KAAK6C,SAAS,CAAEhB,OAAQ7B,KAAKgC,MAAMH,U,qBAGvC,SAAQlB,GAAK,IAAD,OACSsC,IAAMC,IAAI,qCACtBiB,MAAK,SAAAhB,GACF,IAAIiB,EAAY,IAAI3B,IAAIU,EAAIE,KAAKX,KAAI,SAAA2B,GAAC,OAAIA,EAAEC,QAAQ,GAAG3D,OAEjD4D,EAAgB,EAAKvC,MAAMC,OAAOuC,QAAO,SAAA7B,GAAC,OAAIA,EAAEhC,IAAMA,KACtD8D,EAAMF,EAAc,GAAG5D,GAC7B,EAAKb,MAAMuB,YACN+C,EAAUd,IAAImB,IASf,EAAK5B,SAAS,CAAErB,MAAM,IACtB+B,QAAQC,IAAI,6BAA8BiB,KAR1ClB,QAAQC,IAAI,gBAAiBe,EAAeE,EAAKL,GAEjDnB,IAAMyB,KAAK,oCACP,CACIJ,QAASC,EAAeI,SAAU,IACnC,EAAK9B,SAAS,CAAErB,MAAM,W,oBAQ7C,WAAU,IAAD,OACKoD,eACV,OACI,sBAAK1E,UAAU,WAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,qBAAKA,UAAU,SAASE,IAAI,kBAAkBC,IAAI,SAClD,wBAAQH,UAAU,UAAUe,QAASjB,KAAKQ,YAA1C,SACKR,KAAKgC,MAAMN,QAAU,mBAAGxB,UAAU,0BAA0ByB,MAAO,CAAEC,SAAU,UAAiB,oBAErG,cAAC,IAAD,CAAMiD,GAAG,SAASlD,MAAO,CAAEmD,MAAO,UAAWC,UAAW,OAAxD,SAAiE,mBAAG7E,UAAU,oBAC9E,qBAAKe,QAASjB,KAAK+B,YAAa7B,UAAU,iBAA1C,gCAGJ,sBAAKA,UAAU,iBAAf,UACKF,KAAKgC,MAAMH,MAAQ,cAAC,EAAD,CAAOA,MAAO7B,KAAK+B,cAAkB,GACxD/B,KAAKF,MAAMkF,MAAQ,cAAC,EAAD,CAAOxD,KAAMxB,KAAKgC,MAAMR,KAAMH,UAAWrB,KAAKF,MAAMuB,UAAW2D,MAAOhF,KAAKgC,MAAMgD,QAAY,KAChHhF,KAAKgC,MAAMN,QACN,cAAC,EAAD,CAAOA,QAAS1B,KAAKgC,MAAMN,QAASuD,MAAM,wBAE5CjF,KAAKgC,MAAMC,OAAOS,KAAI,SAACuB,EAAGiB,GAAJ,OAClB,cAAC,EAAD,CAEIvE,GAAIsD,EAAEtD,GAENE,KAAMoD,EAAEpD,KACRd,OAAQkE,EAAElE,OACVa,OAAQqD,EAAErD,OACVF,QAAS,EAAKA,SANTwE,gB,GArHC5E,aAAjBwB,EACVqD,aAAe,CAClBnC,cAAe,I,YCNFoC,E,4JACjB,WACI,OACI,8BACI,sBAAKlF,UAAU,YAAf,UACI,cAAC,IAAD,CAAM2E,GAAI7E,KAAKF,MAAMuF,KAAM1D,MAAO,CAAEmD,MAAO,SAA3C,SAAsD,sBAAM5E,UAAU,QAAhB,SAAwB,mBAAGA,UAAU,0BAC3F,cAAC,IAAD,CAAM2E,GAAG,IAAT,SAAa,mBAAG3E,UAAU,2BAC1B,mBAAGA,UAAU,aAAb,SAA2BF,KAAKF,MAAMwF,iB,GAPxBhF,aCCnB,G,MAAA,SAACR,GACZ,IAAQa,EAAyBb,EAAzBa,GAAIqE,EAAqBlF,EAArBkF,MAAO3D,EAAcvB,EAAduB,UACnB,EAA0BkE,mBAAS,IAAnC,mBAAOD,EAAP,KAAcE,EAAd,KACA,EAAgCD,mBAAS,CAAC,KAA1C,mBAAOZ,EAAP,KAAiBc,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAOAC,qBAEQ,WANJ7C,IAAMC,IAAI,qCAAuCvC,GAC5CwD,MAAK,SAAAhB,GAAG,OAAIsC,EAAYtC,EAAIE,KAAKsB,aACjCoB,OAAM,SAAAC,GAAG,OAAIzC,QAAQC,IAAI,iBAAkBwC,QAIlB,CAACrB,IAmBnC,IAsCMsB,EAAO,SAACC,GAEV,IAAIC,EAAS,IAAIC,KAAKF,GAAOG,WAAWC,MAAM,IAE9C,OADAH,EAAMI,OAAOJ,EAAMK,QAAQ,KAAK,GAAGC,KAAK,IACjCN,GAGX,OACI,sBAAKjG,UAAU,iBAAf,UACI,cAAC,EAAD,CAAMmF,KAAK,QAAQC,MAAM,YAExBN,EAAQ,cAAC,EAAD,CAAOzD,QAASqE,EAAOvE,UAAWA,IAAgB,GAE1DsD,EAASjC,KAAI,SAACgE,EAAGxB,GAAJ,OACV,sBAAKhF,UAAU,gBAAgByG,MAAOzB,EAAtC,UACI,qBAAKhF,UAAU,QAAQe,QAAS,SAAC2F,GAAD,OA3B1B,SAACjG,EAAIkG,EAAKF,GAC5B,IAAItB,EAAI,gDAA4C1E,EAA5C,YAAkDkG,GAC1D5D,IAAM6D,MAAMzB,GACPlB,MAAK,SAAAhB,OAKH4C,OAAM,SAAAC,GAAG,OAAIzC,QAAQC,IAAIwC,MAmBmBe,CAAcpG,EAAI+F,EAAEM,MAA3D,SACI,mBAAG9G,UAAU,kBAEjB,8BAAIwG,EAAE3G,OAAN,WAAqB,uBAArB,IAA4B,+BAAO2G,EAAE7F,UACrC,4BAAIoF,EAAKS,EAAEO,UALiC/B,MASpD,uBAAMhF,UAAU,YAAYgH,SA7Dd,SAAAN,GAClBA,EAAEO,iBACE7B,EAAM1C,OAAS,GACfiD,EAAS,wBACTxE,KAEKqE,EAAQ9C,OAAS,GACtBiD,EAAS,oBACTxE,MAGIoE,EAAY,GAAD,mBAAKd,GAAL,CAAe,CAAE9D,KAAM6E,EAAS3F,OAAQuF,EAAOW,KAAMG,WACpEP,EAAS,IACT5C,IAAM6D,MAAM,qCAAuCnG,EAAI,CAAE,OAAU2E,EAAO,KAAQI,IAChFvB,MAAK,SAAAhB,GACHI,QAAQC,IAAIL,GACRA,EAAIE,KAAK2C,MACTH,EAAS1C,EAAIE,KAAK2C,KAClB3E,QAEL0E,OAAM,SAAAC,GAAG,OAAIzC,QAAQC,IAAIwC,MAC5BL,EAAW,IACXH,EAAS,MAuCT,UACI,gCACI,yCAAoB,uBACpB,uBAAOtF,UAAU,aAAakH,KAAK,OAAOC,MAAO/B,EAAOgC,SAAU,SAACV,GAAD,OAAOpB,EAASoB,EAAE7F,OAAOsG,aAE/F,gCACI,4CAAuB,uBACvB,0BAAUnH,UAAU,aAAaqH,KAAM,GAAIF,MAAO3B,EAAS4B,SAAU,SAACV,GAAD,OAAOjB,EAAWiB,EAAE7F,OAAOsG,aAEpG,uBAAOnH,UAAU,yBAAyBkH,KAAK,SAASC,MAAM,iBCvGzDG,E,kDACjB,WAAY1H,GAAO,uCACTA,G,0CAIV,WACI,OACI,qBAAKI,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UAEI,4BAAIF,KAAKF,MAAMe,OAAS,uBACxB,iCAAOb,KAAKF,MAAMC,OAAO,uBACpBC,KAAKF,MAAMc,OACZ,uBACA,eAAC,IAAD,CAAMiE,GAAE,gBAAW7E,KAAKF,MAAMa,GAAtB,KAA6BgB,MAAO,CAAE8F,WAAY,QAAS7F,SAAS,QAAS8F,cAAe,QAApG,oBAAsH1H,KAAKF,MAAM6H,cAAjI,mB,GAfUrH,aCCbsH,E,kDACjB,WAAY9H,GAAQ,IAAD,8BACf,cAAMA,IACDkC,MAAQ,CAAE6F,KAAM,IACrB,EAAKC,YAAc,EAAKA,YAAYrH,KAAjB,gBAHJ,E,kDAMnB,WAAkB,IAAD,OACbwC,IAAMC,IAAI,qCACLiB,MAAK,SAAAhB,GACF,EAAKN,SAAS,CAAEgF,KAAM1E,EAAIE,Y,+BAItC,WACIrD,KAAK+H,mB,yBAGT,SAAYC,GACRzE,QAAQC,IAAIwE,GACZ/E,IAAMgF,IAAI,qCAAuCD,GAC5C7D,MAAK,SAAAhB,OACH4C,OAAM,SAAAC,GAAG,OAAIzC,QAAQC,IAAIwC,Q,yBAIpC,SAAYgC,GACRzE,QAAQC,IAAI,YAAawE,GACzB/E,IAAMiF,OAAO,qCAAuCF,GAC/C7D,MAAK,SAAAhB,OACH4C,OAAM,SAAAC,GAAG,OAAIzC,QAAQC,IAAIwC,MAChChG,KAAK6C,SAAS,CAAEgF,KAAM7H,KAAKgC,MAAM6F,KAAKrD,QAAO,SAAAH,GAAC,OAAIA,EAAE2C,KAAOgB,S,oBAG/D,WAAU,IAAD,OACKpD,eACV,OACI,sBAAK1E,UAAU,iBAAf,UACI,cAAC,EAAD,CAAMoF,MAAM,eAAeD,KAAK,MACJ,IAA3BrF,KAAKgC,MAAM6F,KAAKjF,OACX,mBAAG1C,UAAU,eAAb,yEACAF,KAAKgC,MAAM6F,KAAKnF,KAAI,SAACC,EAAGuC,GAAJ,OAElB,gCACI,qBAAKhF,UAAU,QAAf,SACI,mBAAGA,UAAU,cAAce,QAAS,SAAC2F,GAAQ,EAAKkB,YAAYnF,EAAEqE,UAEpE,cAAC,EAAD,CACIvC,IAAK9B,EAAE2B,QAAQ,GAAK3D,GACpBA,GAAIgC,EAAEqE,IACNnG,KAAM8B,EAAE2B,QAAQ,GAAKzD,KACrBd,OAAQ4C,EAAE2B,QAAQ,GAAKvE,OACvBa,OAAQ+B,EAAE2B,QAAQ,GAAK1D,OACvBuH,OAAQ,EAAKC,YACbT,cAAehF,EAAEgC,SAAWhC,EAAEgC,SAAS/B,OAAS,MAX9CsC,a,GA3CA5E,aC8BnB+H,E,kDA1Bb,WAAYvI,GAAQ,IAAD,8BACjB,cAAMA,IACDkC,MAAQ,CAAEgD,OAAO,GACtB,EAAK3D,UAAY,EAAKA,UAAUZ,KAAf,gBAHA,E,6CAMnB,WACET,KAAK6C,SAAS,CACZmC,OAAQhF,KAAKgC,MAAMgD,QAErBzB,QAAQC,IAAI,gB,oBAId,WACE,OACE,eAAC,IAAD,CAAQtD,UAAU,MAAlB,UACE,cAAC,EAAD,CAAUoI,KAAK,IAAIjH,UAAWrB,KAAKqB,UAAW2D,MAAOhF,KAAKgC,MAAMgD,QAChE,cAAC,EAAD,CAAMsD,KAAK,aAAajH,UAAWrB,KAAKqB,UAAW2D,MAAOhF,KAAKgC,MAAMgD,QACrE,cAAC,EAAD,CAAMsD,KAAK,UACX,cAAC,EAAD,CAAOA,KAAK,kB,GArBFhI,aCAZiI,EAAcC,QACW,cAA7BpG,OAAOqG,SAASC,UAEe,UAA7BtG,OAAOqG,SAASC,UAEhBtG,OAAOqG,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT1E,MAAK,SAAA8E,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBnH,QACf8G,UAAUC,cAAcO,WAK1B/F,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBuC,OAAM,SAAAH,GACLrC,QAAQqC,MAAM,4CAA6CA,MCzEjE2D,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBZ,UAAW,CAGzE,GADkB,IAAIa,IAAIC,GAAwBxH,OAAOqG,UAC3CoB,SAAWzH,OAAOqG,SAASoB,OAIvC,OAGFzH,OAAO0H,iBAAiB,QAAQ,WAC9B,IAAMjB,EAAK,UAAMe,GAAN,sBAEPrB,IAiDV,SAAiCM,GAE/BkB,MAAMlB,GACH1E,MAAK,SAAA6F,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQhH,IAAI,gBAAgBsD,QAAQ,cAG7CsC,UAAUC,cAAcoB,MAAMhG,MAAK,SAAA8E,GACjCA,EAAamB,aAAajG,MAAK,WAC7B/B,OAAOqG,SAAS4B,eAKpBzB,EAAgBC,MAGnB9C,OAAM,WACLxC,QAAQC,IACN,oEArEA8G,CAAwBzB,GAIxBC,UAAUC,cAAcoB,MAAMhG,MAAK,WACjCZ,QAAQC,IACN,gHAMJoF,EAAgBC,OCzCxB0B,K","file":"static/js/main.b982b466.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass GetFace extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const author = this.props.author\r\n        function getFace(author) {\r\n            switch (author) {\r\n                case \"Marcus Aurelius\":\r\n                    return [\"https://en.wikipedia.org/wiki/Marcus_Aurelius\", \"https://upload.wikimedia.org/wikipedia/commons/thumb/1/1c/Marcus_Aurelius_Louvre_MR561_n02.jpg/164px-Marcus_Aurelius_Louvre_MR561_n02.jpg\"]\r\n                    break;\r\n\r\n                case \"Seneca\":\r\n                    return [\"https://en.wikipedia.org/wiki/Seneca_the_Younger\", \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b1/0_S%C3%A9n%C3%A8que_-_Mus%C3%A9e_du_Prado_-_Cat._144_-_%282%29.JPG/170px-0_S%C3%A9n%C3%A8que_-_Mus%C3%A9e_du_Prado_-_Cat._144_-_%282%29.JPG\"]\r\n\r\n                    break;\r\n                case \"Epictetus\":\r\n                    return [\"https://en.wikipedia.org/wiki/Epictetus\", \"https://3quarksdaily.com/wp-content/uploads/2019/04/Crito-1a-259x360.jpg\"]\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"face\">\r\n                <a href={getFace(author)[0]}>\r\n                    <img src={getFace(author)[1]} alt={author} />\r\n                </a>\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default GetFace;","import React, { Component } from 'react';\r\nimport './Joke.css';\r\nimport GetFace from './GetFace';\r\n\r\nexport default class Joke extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        this.props.addThis(this.props.id);\r\n    }\r\n\r\n\r\n    render() {\r\n        const source = this.props.source;\r\n        const getSource = source =>\r\n            source.includes(\"Meditations\") ? <a href=\"http://classics.mit.edu/Antoninus/meditations.mb.txt\" target=\"_blank\">Mediations</a> : this.props.source\r\n\r\n        return (\r\n\r\n            <div className=\"Joke\">\r\n                <GetFace source={this.props.source} author={this.props.author} />\r\n                {/* <div className=\"Joke-buttons\">\r\n                    <i className=\"fas fa-arrow-up\" onClick={this.props.upvote}></i>\r\n                    <span className=\"Joke-votes\">{this.props.votes}</span>\r\n                    <i className=\"fas fa-arrow-down\" onClick={this.props.downvote}></i>\r\n                </div> */}\r\n                <div className=\"Joke-text\">\r\n                    <p></p>{this.props.text}\r\n                    <br />\r\n                    <span>{this.props.author},<br></br> {getSource(source)}</span>\r\n                    <button className=\"Joke-addButton\" onClick={this.handleClick}>+</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Favs.css\"\r\n\r\nexport default class PopUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const timer = setTimeout(() => {\r\n            this.props.togglePop()\r\n        }, 1000);\r\n        return () => clearTimeout(timer);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal_content\">\r\n                {this.props.message\r\n                    ?\r\n                    this.props.message\r\n                    :\r\n                    this.props.dupe ? \"Already  saved!\" : \"Saved the quote.\"\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport \"./About.css\";\r\nimport { Link } from '@reach/router';\r\n\r\n\r\nexport default class About extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"About\">\r\n                <div>\r\n                    {this.props.loading ?\r\n                        <div>\r\n                            <p>Getting the wisdom...</p>\r\n                            <i className=\"fas fa-spinner fa-pulse\" style={{ fontSize: '4rem' }}></i>\r\n                        </div>\r\n                        :\r\n                        <div onClick={this.props.about}>\r\n                            <hr />\r\n                            {/* <p onClick={() => window.location.href = `mailto:${this.props.email}`}>email</p> */}\r\n                            <p>Armen Agabekian (v2021)*</p>\r\n                            <a href=\"mailto:armasconi@gmail.com\">email</a>\r\n                            <hr />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from '@reach/router';\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport \"./JokeList.css\";\r\nimport Joke from './Joke';\r\nimport PopUp from './PopUp';\r\nimport About from './About';\r\n\r\nexport default class JokeList extends Component {\r\n    static defaultProps = {\r\n        numJokesToGet: 10\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.toggleAbout = this.toggleAbout.bind(this);\r\n        this.addThis = this.addThis.bind(this);\r\n        this.state = {\r\n            quotes: JSON.parse(window.localStorage.getItem(\"quotes\") || \"[]\"),\r\n            selected: [], loading: false, dupe: false, about: false\r\n        };\r\n        this.seenQuotes = new Set(this.state.quotes.map(q => q.id));\r\n\r\n    }\r\n    componentDidMount() {\r\n        if (this.state.quotes.length === 0) {\r\n            this.setState({ loading: true }),\r\n                this.fetchQuotes();\r\n        }\r\n    }\r\n\r\n    async fetchQuotes() {\r\n        try {\r\n            let quotes = [];\r\n            while (quotes.length < this.props.numJokesToGet) {\r\n                let res = await axios.get(\"https://stoic-server.herokuapp.com/random\");\r\n                let rez = res.data[0]\r\n                if (!this.seenQuotes.has(rez.id)) {\r\n\r\n                    quotes.push({ text: rez.body, author: rez.author, source: rez.quotesource, id: rez.id });\r\n                } else {\r\n                    console.log(\"****************duplicate found ****************\",\r\n                        // rez.body, \r\n                        res.id\r\n                    )\r\n                }\r\n            }\r\n            // console.log(quotes);\r\n            this.setState(\r\n                st => ({\r\n                    loading: false,\r\n                    quotes: [...st.quotes, ...quotes],\r\n                }),\r\n                () => window.localStorage.setItem(\"quotes\", JSON.stringify(this.state.quotes))\r\n            );\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n    }\r\n\r\n    handleVote(id, delta) {\r\n        this.setState(\r\n            st => ({\r\n                quotes: st.quotes.map(j =>\r\n                    j.id === id ? { ...j, votes: j.votes + delta } : j\r\n                )\r\n            }), () => window.localStorage.setItem(\"quotes\", JSON.stringify(this.state.quotes))\r\n\r\n        );\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState({ loading: true });\r\n        this.setState({ about: false })\r\n        this.fetchQuotes();\r\n    }\r\n\r\n    toggleAbout() {\r\n        this.setState({ about: !this.state.about })\r\n    }\r\n\r\n    addThis(id) {\r\n        const repsonse = axios.get('http://localhost:8000/api/entries')\r\n            .then(res => {\r\n                let dbIndexes = new Set(res.data.map(i => i.content[0].id))\r\n                // console.log(\"is a set now\", this.state.compare)\r\n                const selectedQuote = this.state.quotes.filter(q => q.id == id);\r\n                const qid = selectedQuote[0].id\r\n                this.props.togglePop()\r\n                if (!dbIndexes.has(qid)) {\r\n\r\n                    console.log(\"grabbed quote\", selectedQuote, qid, dbIndexes)\r\n                    // if()\r\n                    axios.post('http://localhost:8000/api/entries',\r\n                        {\r\n                            content: selectedQuote, comments: []\r\n                        }, this.setState({ dupe: false }))\r\n                } else {\r\n                    this.setState({ dupe: true })\r\n                    console.log(\"you alreay saved the quote\", qid)\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        let idx = uuidv4();\r\n        return (\r\n            <div className=\"JokeList\">\r\n                <div className=\"JokeList-sidebar\">\r\n                    <img className=\"image1\" src=\"images/logo.jpg\" alt=\"logo\" />\r\n                    <button className=\"getmore\" onClick={this.handleClick}>\r\n                        {this.state.loading ? <i className=\"fas fa-spinner fa-pulse\" style={{ fontSize: '1rem' }}></i> : \"Add More Quotes\"}\r\n                    </button>\r\n                    <Link to=\"/favs/\" style={{ color: \"#8a0303\", marginTop: \"5px\" }}><i className=\"fas fa-scroll\"></i></Link>\r\n                    <div onClick={this.toggleAbout} className=\"JokeList-title\">stoic companion\r\n                    </div>\r\n                </div>\r\n                <div className=\"JokeList-jokes\">\r\n                    {this.state.about ? <About about={this.toggleAbout} /> : \"\"}\r\n                    {this.props.modal ? <PopUp dupe={this.state.dupe} togglePop={this.props.togglePop} modal={this.state.modal} /> : null}\r\n                    {this.state.loading\r\n                        ? <About loading={this.state.loading} email=\"armasconi@gmail.com\" />\r\n                        :\r\n                        this.state.quotes.map((j, idx) => (\r\n                            <Joke\r\n                                key={idx}\r\n                                id={j.id}\r\n                                // votes={j.votes}\r\n                                text={j.text}\r\n                                author={j.author}\r\n                                source={j.source}\r\n                                addThis={this.addThis}\r\n                            // upvote={() => this.handleVote(j.id, 1)}\r\n                            // downvote={() => this.handleVote(j.id, -1)}\r\n                            />\r\n                        ))}\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from '@reach/router';\r\nimport \"../Favs.css\"\r\n\r\n\r\nexport default class Back extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"Favs-back\">\r\n                    <Link to={this.props.link} style={{ color: 'white' }}><span className=\"arrow\"><i className=\"fas fa-angle-left\"></i></span></Link>\r\n                    <Link to=\"/\"><i className=\"fas fa-archway home \"></i></Link>\r\n                    <p className=\"Favs-title\">{this.props.title}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport Back from './scrap/Back';\r\nimport PopUp from './PopUp';\r\nimport \"./Note.css\";\r\n\r\nexport default (props) => {\r\n    const { id, modal, togglePop } = props;\r\n    const [title, setTitle] = useState(\"\");\r\n    const [comments, setComments] = useState([{}]);\r\n    const [comment, setComment] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const displayEntry = () => {\r\n        axios.get(\"http://localhost:8000/api/entries/\" + id)\r\n            .then(res => setComments(res.data.comments))\r\n            .catch(err => console.log(\"bummer, error:\", err))\r\n    }\r\n    useEffect\r\n        (\r\n            () => { displayEntry() }, [comments]\r\n        );\r\n\r\n    // useEffect(() => {\r\n    //     setError(\"\");\r\n    //     axios.patch('http://localhost:8000/api/entries/' + id, {\r\n    //              comments\r\n    //         // used to be whole 'comments' state above \r\n    //         // (whole object would get inserted into quote obj, now seperate models)\r\n    //     }).then(res => {\r\n    //         if (res.data.errors) {\r\n    //             setErrors(res.data.errors);\r\n    //         }\r\n    //     }).catch(err => console.log(err));\r\n    //     setComment(\"\");\r\n    //     setTitle(\"\");\r\n    // }, [comments]\r\n    // )\r\n\r\n    const SubmitHandler = e => {\r\n        e.preventDefault();\r\n        if (title.length < 3) {\r\n            setError(\"title needs 3+ chars\")\r\n            togglePop();\r\n        }\r\n        else if (comment.length < 3) {\r\n            setError(\"comment 3+ chars\")\r\n            togglePop();\r\n        }\r\n        else {\r\n                setComments([...comments, { text: comment, author: title, date: Date() }]);\r\n            setError(\"\");\r\n            axios.patch('http://localhost:8000/api/entries/' + id, { \"author\": title, \"text\": comment }\r\n            ).then(res => {\r\n                console.log(res)\r\n                if (res.data.err) {\r\n                    setError(res.data.err);\r\n                    togglePop();\r\n                }\r\n            }).catch(err => console.log(err));\r\n            setComment(\"\");\r\n            setTitle(\"\");\r\n        }\r\n    }\r\n\r\n    const deleteComment = (id, cid, index) => {\r\n        let link = `http://localhost:8000/api/entries/cut/${id}/${cid}`\r\n        axios.patch(link)\r\n            .then(res => {\r\n                // setComments([...comments.filter(c => comments.indexOf(c) != index)])\r\n                // setComments(res.data.comments)\r\n                // displayEntry();\r\n                // if(comments) is still not processed pop a modal\r\n            }).catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    const date = (uTime)=> \r\n    {\r\n        let local =  new Date(uTime).toString().split('')\r\n        local.splice(local.indexOf('G')-4).join('')\r\n        return local\r\n    }\r\n\r\n    return (\r\n        <div className=\"JokeList-jokes\">\r\n            <Back link=\"/favs\" title=\"musings\" />\r\n\r\n            {modal ? <PopUp message={error} togglePop={togglePop} /> : \"\"}\r\n            {/* <p>{id}</p> */}\r\n            {comments.map((c, idx) =>\r\n                <div className=\"Note-comments\" index={idx} key={idx}>\r\n                    <div className=\"close\" onClick={(e) => deleteComment(id, c._id, idx)}>\r\n                        <i className=\"fa fa-times\"></i>\r\n                    </div>\r\n                    <p>{c.author} wrote: <br /> <span>{c.text}</span></p>\r\n                    <p>{date(c.time)}</p>\r\n                    {/* <p>{c.rating}not rating the greats</p> */}\r\n                </div>\r\n            )}\r\n            <form className=\"Note-form\" onSubmit={SubmitHandler}>\r\n                <div>\r\n                    <label >Name</label><br />\r\n                    <input className=\"Note-input\" type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n                </div>\r\n                <div>\r\n                    <label >Comment</label><br />\r\n                    <textarea className=\"Note-input\" cols={23} value={comment} onChange={(e) => setComment(e.target.value)} />\r\n                </div>\r\n                <input className=\"btn btn-primary submit\" type=\"submit\" value=\"post\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Joke.css';\r\nimport { Link } from '@reach/router';\r\n\r\n\r\n\r\nexport default class List extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Joke\">\r\n                <div className=\"Joke-text\">\r\n                    {/* <p>{this.props.id}</p> */}\r\n                    <p>{this.props.text}</p><br/>\r\n                    <span>{this.props.author}<br/>\r\n                        {this.props.source}\r\n                        <br />\r\n                        <Link to={`/note/${this.props.id}/`} style={{ fontFamily: \"arial\", fontSize:\".7rem\", letterSpacing: \".6px\" }}>notes ({this.props.nums_of_comms})</Link>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport List from './List';\r\nimport './Favs.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Back from './scrap/Back';\r\n\r\nexport default class Favs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { favs: [] }\r\n        this.deleteEntry = this.deleteEntry.bind(this)\r\n    }\r\n\r\n    getSavedQuotes() {\r\n        axios.get('http://localhost:8000/api/entries')\r\n            .then(res => {\r\n                this.setState({ favs: res.data })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getSavedQuotes();\r\n    }\r\n\r\n    updateEntry(entryId) {\r\n        console.log(entryId)\r\n        axios.put('http://localhost:8000/api/entries/' + entryId)\r\n            .then(res => {\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    deleteEntry(entryId) {\r\n        console.log(\"deleted: \", entryId)\r\n        axios.delete('http://localhost:8000/api/entries/' + entryId)\r\n            .then(res => {\r\n            }).catch(err => console.log(err));\r\n        this.setState({ favs: this.state.favs.filter(i => i._id != entryId) })\r\n    }\r\n\r\n    render() {\r\n        let idx = uuidv4();\r\n        return (\r\n            <div className=\"JokeList-jokes\">\r\n                <Back title=\"saved quotes\" link=\"/\" />\r\n                {this.state.favs.length === 0\r\n                    ? <p className=\"Favs-message\">No saved quotes yet, you can add them by using a \"+\" button</p>\r\n                    : this.state.favs.map((q, idx) =>\r\n                    (\r\n                        <div key={idx}>\r\n                            <div className=\"close\">\r\n                                <i className=\"fa fa-times\" onClick={(e) => { this.deleteEntry(q._id) }}></i>\r\n                            </div>\r\n                            <List\r\n                                qid={q.content[\"0\"].id}\r\n                                id={q._id}\r\n                                text={q.content[\"0\"].text}\r\n                                author={q.content[\"0\"].author}\r\n                                source={q.content[\"0\"].source}\r\n                                update={this.updateEntry}\r\n                                nums_of_comms={q.comments ? q.comments.length : 0}\r\n                            />\r\n                        </div>\r\n                    ))}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport JokeList from \"./components/JokeList\";\r\nimport { Router } from '@reach/router';\r\nimport Note from './components/Note';\r\nimport Favs from \"./components/Favs\";\r\nimport About from \"./components/About\";\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { modal: false }\r\n    this.togglePop = this.togglePop.bind(this);\r\n  }\r\n\r\n  togglePop() {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n    console.log(\"state flip\")\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Router className=\"App\">\r\n        <JokeList path=\"/\" togglePop={this.togglePop} modal={this.state.modal} />\r\n        <Note path=\"/note/:id/\" togglePop={this.togglePop} modal={this.state.modal} />\r\n        <Favs path=\"/favs\" />\r\n        <About path=\"/about\" />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}